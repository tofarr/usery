"""add_key_pair_table

Revision ID: e6f331e7cd15
Revises: 93983f0a94ad
Create Date: 2025-04-27 00:09:41.095548

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import uuid

# Import UUIDType from user model
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))
from usery.models.user import UUIDType


# revision identifiers, used by Alembic.
revision = 'e6f331e7cd15'
down_revision = '93983f0a94ad'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('key_pairs',
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('public_key', sa.String(), nullable=False),
    sa.Column('private_key', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_key_pairs_id'), 'key_pairs', ['id'], unique=False)
    # SQLite doesn't support ALTER COLUMN for changing types
    # Skip these operations for SQLite
    # op.alter_column('user_attributes', 'user_id',
    #            existing_type=sa.NUMERIC(),
    #            type_=sa.UUID(),
    #            existing_nullable=False)
    # op.alter_column('user_tags', 'user_id',
    #            existing_type=sa.NUMERIC(),
    #            type_=sa.UUID(),
    #            existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # SQLite doesn't support ALTER COLUMN for changing types
    # Skip these operations for SQLite
    # op.alter_column('user_tags', 'user_id',
    #            existing_type=sa.UUID(),
    #            type_=sa.NUMERIC(),
    #            existing_nullable=False)
    # op.alter_column('user_attributes', 'user_id',
    #            existing_type=sa.UUID(),
    #            type_=sa.NUMERIC(),
    #            existing_nullable=False)
    op.drop_index(op.f('ix_key_pairs_id'), table_name='key_pairs')
    op.drop_table('key_pairs')
    # ### end Alembic commands ###