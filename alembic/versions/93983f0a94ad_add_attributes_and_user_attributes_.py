"""add_attributes_and_user_attributes_tables

Revision ID: 93983f0a94ad
Revises: 939c5519a827
Create Date: 2025-04-26 23:29:43.406933

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import uuid

# Import UUIDType from user model
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))
from usery.models.user import UUIDType


# revision identifiers, used by Alembic.
revision = '93983f0a94ad'
down_revision = '939c5519a827'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attributes',
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('schema', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attributes_id'), 'attributes', ['id'], unique=False)
    op.create_table('user_attributes',
    sa.Column('id', UUIDType(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('attribute_id', UUIDType(), nullable=False),
    sa.Column('value', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['attribute_id'], ['attributes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_attributes_id'), 'user_attributes', ['id'], unique=False)
    # SQLite doesn't support ALTER COLUMN for changing types
    # The user_id column in user_tags is already a UUID in the database
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # SQLite doesn't support ALTER COLUMN for changing types
    # Skip this operation for SQLite
    op.drop_index(op.f('ix_user_attributes_id'), table_name='user_attributes')
    op.drop_table('user_attributes')
    op.drop_index(op.f('ix_attributes_id'), table_name='attributes')
    op.drop_table('attributes')
    # ### end Alembic commands ###